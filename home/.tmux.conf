set-option -g prefix C-a

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/.tmux-powerline/status-left.sh")
set-option -g status-right "#(~/.tmux-powerline/status-right.sh)"
set-option -g repeat-time 200
set-option -sg escape-time 1

# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

set -g default-terminal "screen-256color"
set-option -g default-command "tmux-default-command"
# set-option -g default-command "reattach-to-user-namespace -l zsh"

set-window-option -g mode-keys vi
set-window-option -g automatic-rename off

unbind %
unbind c
bind c neww -c '#{pane_current_path}'
bind / splitw -h -c '#{pane_current_path}'
bind - splitw -c '#{pane_current_path}'

unbind-key j
bind-key -r j select-pane -D
bind-key -r J resize-pane -D 5

unbind-key k
bind-key -r k select-pane -U
bind-key -r K resize-pane -U 5

unbind-key h
bind-key -r h select-pane -L
bind-key -r H resize-pane -L 5

unbind-key l
bind-key -r l select-pane -R
bind-key -r L resize-pane -R 5

bind a send-prefix

# Remove the default binding for copy-selection, substitute emacs-copy with vi-copy if you're using vi-mode
unbind -t vi-copy M-w

# Bind a different key to copy-selection
unbind -t vi-copy v
# unbind -t vi-copy y
bind -t vi-copy v begin-selection
# bind -t vi-copy c copy-selection

# Bind prefix-M-w to copy-selection, save selection to buffer, and then pipe it's contents to clipboard
# bind y send-keys c\; save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer|pbcopy" \; display-message "copied"\;

bind R source-file ~/.tmux.conf \; display-message "Config reloaded"
set-option -g history-limit 10000

source-file ~/.tmuxline

# Smart pane switching with awareness of vim/emacs splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"

set -g @shell_mode 'vi'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
run '~/.tmux/plugins/tpm/tpm'
